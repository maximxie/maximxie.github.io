<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>POJ-2386-Lake_Counting</title>
    <url>/2020/04/06/POJ-2386-Lake_Counting/</url>
    <content><![CDATA[<h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p>Total Submission(s) : 28 Accepted Submission(s) : 18<br>Problem Description<br>Due to recent rains, water has pooled in various places in Farmer John’s field, which is represented by a rectangle of N x M (1 &lt;= N &lt;= 100; 1 &lt;= M &lt;= 100) squares. Each square contains either water (‘W’) or dry land (’.’). Farmer John would like to figure out how many ponds have formed in his field. A pond is a connected set of squares with water in them, where a square is considered adjacent to all eight of its neighbors.</p>
<p>Given a diagram of Farmer John’s field, determine how many ponds he has.</p>
<a id="more"></a>
<h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><ul>
<li><p>Line 1: Two space-separated integers: N and M</p>
</li>
<li><p>Lines 2…N+1: M characters per line representing one row of Farmer John’s field. Each character is either ‘W’ or ‘.’. The characters do not have spaces between them.</p>
</li>
</ul>
<h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>Line 1: The number of ponds in Farmer John’s field.</p>
<h3 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 12</span><br><span class="line">W........WW.</span><br><span class="line">.WWW.....WWW</span><br><span class="line">....WW...WW.</span><br><span class="line">.........WW.</span><br><span class="line">.........W..</span><br><span class="line">..W......W..</span><br><span class="line">.W.W.....WW.</span><br><span class="line">W.W.W.....W.</span><br><span class="line">.W.W......W.</span><br><span class="line">..W.......W.</span><br></pre></td></tr></table></figure>

<h3 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h3><p><code>3</code></p>
<hr>
<ol>
<li>本题核心DFS</li>
<li>每个小水滩的八个方向如果有水滩则构成一个池塘</li>
<li>通过DFS搜索把搜到的每个水滩’W’换成’.’，再继续向八个方向进行DFS</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">   int n,m;</span><br><span class="line">char s[105][105];</span><br><span class="line">int vis[105][105];</span><br><span class="line">int dx[8]&#x3D;&#123;0,1,1,1,0,-1,-1,-1&#125;;&#x2F;&#x2F;表示可往八个方向移动</span><br><span class="line">int dy[8]&#x3D;&#123;1,1,0,-1,-1,-1,0,1&#125;;</span><br><span class="line">bool judge(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">   	if(x&gt;&#x3D;0&amp;&amp;x&lt;m&amp;&amp;y&gt;&#x3D;0&amp;&amp;y&lt;n&amp;&amp;s[x][y]&#x3D;&#x3D;&#39;W&#39;)&#123;</span><br><span class="line">   	    return true;</span><br><span class="line">   	&#125;</span><br><span class="line">   	return false;</span><br><span class="line">&#125;</span><br><span class="line">void dfs(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">   	if(s[x][y]&#x3D;&#x3D;&#39;.&#39;)&#123;</span><br><span class="line">   	    return ;</span><br><span class="line">   	&#125;</span><br><span class="line">   	s[x][y]&#x3D;&#39;.&#39;;</span><br><span class="line">   	for(int i&#x3D;0;i&lt;8;i++)&#123;</span><br><span class="line">   	    int xx&#x3D;x+dx[i];</span><br><span class="line">   	    int yy&#x3D;y+dy[i];</span><br><span class="line">   	    if(judge(xx,yy))&#123;</span><br><span class="line">   	        dfs(xx,yy);</span><br><span class="line">   	        s[xx][yy]&#x3D;&#39;.&#39;;</span><br><span class="line">   	    &#125;</span><br><span class="line">   	&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">   	cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">   	for(int i&#x3D;0;i&lt;m;i++)&#123;</span><br><span class="line">   	    scanf(&quot;%s&quot;,&amp;s[i]);</span><br><span class="line">   	&#125;</span><br><span class="line">   	memset(vis,0,sizeof(vis));</span><br><span class="line">   	int ans&#x3D;0;</span><br><span class="line">   	for(int i&#x3D;0;i&lt;m;i++)&#123;</span><br><span class="line">       	for(int j&#x3D;0;j&lt;n;j++)&#123;</span><br><span class="line">       	    if(s[i][j]&#x3D;&#x3D;&#39;W&#39;)&#123;   &#x2F;&#x2F;如若搜到水滩则将其进行DFS把	与其构成一个池塘的的其他水滩换成旱地</span><br><span class="line">               	dfs(i,j);</span><br><span class="line">               	ans++;  &#x2F;&#x2F;统计池塘数量</span><br><span class="line">           	&#125;</span><br><span class="line">       	&#125;</span><br><span class="line">   	&#125;</span><br><span class="line">   	cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>DFS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>hexo简单用法</category>
      </categories>
      <tags>
        <tag>标签1</tag>
      </tags>
  </entry>
</search>
