<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>hexo简单用法</category>
      </categories>
      <tags>
        <tag>标签1</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL学习笔记</title>
    <url>/2020/04/11/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="如何在终端上操作mysql数据库"><a href="#如何在终端上操作mysql数据库" class="headerlink" title="如何在终端上操作mysql数据库:"></a>如何在终端上操作mysql数据库:</h3><ol>
<li>开启数据库的两种方式<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net start mysql</span><br><span class="line">mysql -u root -p</span><br><span class="line">或者mysql -u root -p&quot;密码&quot;(之间不要空格)</span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li>显示数据库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure></li>
<li>创建数据库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database 数据库名;</span><br></pre></td></tr></table></figure></li>
<li>使用数据库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure></li>
<li>退出数据库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure></li>
<li>删除数据库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop database 数据库名;</span><br></pre></td></tr></table></figure>
<hr>  

</li>
</ol>
<h3 id="对表的操作"><a href="#对表的操作" class="headerlink" title="对表的操作:"></a>对表的操作:</h3><ol>
<li>建表<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table pet(</span><br><span class="line">	name varchar(20),</span><br><span class="line">	sex varchar(10),</span><br><span class="line">	birth date</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li>
<li>查看创建的数据表结构<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">desc 表名;</span><br><span class="line">+-------+------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type       | Null | Key | Default | Extra |</span><br><span class="line">+-------+------------+------+-----+---------+-------+</span><br><span class="line">| name  | varchar(5) | YES  |     | NULL    |       |</span><br><span class="line">| sex   | varchar(1) | YES  |     | NULL    |       |</span><br><span class="line">| birth | date       | YES  |     | NULL    |       |</span><br><span class="line">+-------+------------+------+-----+---------+-------+</span><br></pre></td></tr></table></figure></li>
<li>删除表<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure></li>
<li>显示表<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure>
<hr>

</li>
</ol>
<h3 id="mysql常用语句："><a href="#mysql常用语句：" class="headerlink" title="mysql常用语句："></a>mysql常用语句：</h3><ol>
<li>insert语句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into pet values(&#39;张三&#39;,&#39;男&#39;,&#39;2000-03-05&#39;);</span><br><span class="line">insert into pet(name,sex) values(&#39;李四&#39;,&#39;男&#39;);</span><br></pre></td></tr></table></figure></li>
<li>delete语句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">delete from pet where name&#x3D;’王五’;</span><br></pre></td></tr></table></figure></li>
<li>update语句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update pet set sex&#x3D;’女’ where name&#x3D;’李四’;</span><br></pre></td></tr></table></figure>
<hr>

</li>
</ol>
<h3 id="建表约束条件："><a href="#建表约束条件：" class="headerlink" title="建表约束条件："></a>建表约束条件：</h3><ol>
<li><p>主键约束，能够唯一确定一张表中的一条记录，给某字段添加使其不重复不为空</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creat table ss(</span><br><span class="line">	id int primary key;</span><br><span class="line">	name varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creat table ss(</span><br><span class="line">	id in primary key,</span><br><span class="line">	name varchar(10),</span><br><span class="line">	psw varchar(10),</span><br><span class="line">	primary key(id,name)</span><br><span class="line">);</span><br><span class="line">&#x2F;&#x2F;联合主键，只要联合的主键值加起来不重复就可以，不过里面任何字段不为空</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creat table ss(</span><br><span class="line">	id int,</span><br><span class="line">	name varchar(10)</span><br><span class="line">);</span><br><span class="line">alter table ss add primary key(id);</span><br><span class="line">&#x2F;&#x2F;修改表结构添加主键</span><br></pre></td></tr></table></figure></li>
<li><p>外键约束，涉及两个表：父表（主表），子表（副表）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;班级（主表）</span><br><span class="line">creat table classes(</span><br><span class="line">	id int primary key,</span><br><span class="line">	name varchar(20)</span><br><span class="line">);</span><br><span class="line">&#x2F;&#x2F;学生表（副表）,class_id为classes表的外键</span><br><span class="line">creat table students(</span><br><span class="line">	id int primary key,</span><br><span class="line">	name varchar(20),</span><br><span class="line">	class_id int ,</span><br><span class="line">	foreign key(class_id) references classes(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对上表进行插入操作</span><br><span class="line">insert into classes values (1,’1班’);</span><br><span class="line">insert into classes values (2,’2班’);</span><br><span class="line">insert into classes values (3,’3班’);</span><br><span class="line">insert into classes values (4,’4班’);</span><br><span class="line">insert into students values(1001,’张三’,1); </span><br><span class="line">insert into students values(1002,’李四’,5);&#x2F;&#x2F;出错，副表要参照主表，主表没有的副表不可以使用 </span><br><span class="line">delete from classes where id&#x3D;1;&#x2F;&#x2F;错误，主表的记录被副表应用时不可以被删除</span><br></pre></td></tr></table></figure>
</li>
<li><p>唯一约束</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creat table ss(</span><br><span class="line">	id int,</span><br><span class="line">	name varchar(10)</span><br><span class="line">);</span><br><span class="line">alter table ss add unique(id);&#x2F;&#x2F;id不能重复</span><br><span class="line"></span><br><span class="line">creat table ss(</span><br><span class="line">	id int,</span><br><span class="line">	name varchar(10)</span><br><span class="line">	unique(id,name)&#x2F;&#x2F;id,name组合不能重复</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>非空约束</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creat table ss(</span><br><span class="line">	id int not null,</span><br><span class="line">	name varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>默认约束</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creat table ss(</span><br><span class="line">	id int ,</span><br><span class="line">	name varchar(10),</span><br><span class="line">	age int default 10&#x2F;&#x2F;age开始默认为10，可以用新的插入顶替</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>

<h3 id="数据库三大设计范式"><a href="#数据库三大设计范式" class="headerlink" title="数据库三大设计范式"></a>数据库三大设计范式</h3><ol>
<li><p>第一范式(1NF):数据表中的所有字段都是不可分割的原子值  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+----+--------+-----------------------------+</span><br><span class="line">| id | name   | address                     |</span><br><span class="line">+----+--------+-----------------------------+</span><br><span class="line">|  1 | 张三   | 安徽省合肥市蜀山区          |</span><br><span class="line">|  2 | 李四   | 安徽省合肥市庐阳区          |</span><br><span class="line">|  3 | 王二   | 安徽省合肥市包河区          |</span><br><span class="line">+----+--------+-----------------------------+</span><br><span class="line">address一列其实还是可以拆分的可以再分成省份、城市、区，上图就是可拆分，不满足第一范式；</span><br><span class="line">范式设计的越详细，对某些实际操作可能更好，但是不一定都是好处。</span><br></pre></td></tr></table></figure>
</li>
<li><p>第二范式(2NF):必须是满足第一范式的前提下，第二范式要求，除主键外每一列都必须完全依赖于主键</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果出现不完全依赖，只可能发生在联合主键的情况下</span><br><span class="line">create table myorser(</span><br><span class="line">    product_id int,           &#x2F;&#x2F;产品号</span><br><span class="line">    customer_id int,          &#x2F;&#x2F;用户号</span><br><span class="line">    product_name varchar(20),</span><br><span class="line">    customer_name varchar(20),</span><br><span class="line">    primary key(product_id,customer_id)&#x2F;&#x2F;产品号和用户号形成联合主键</span><br><span class="line">);</span><br><span class="line">此表的产品的名只和产品号有关、用户的名只和用户号有关，就是不完全依赖于主键，不满足第二范式。</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>拆表如下满足第二范式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table myorder2(     &#x2F;&#x2F;订单表,包括产品号、用户号依赖于订单号</span><br><span class="line">	order_id int primary key,</span><br><span class="line">    product_id int,</span><br><span class="line">    customer_id int</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create table product(    &#x2F;&#x2F;产品表，产品名依赖于产品id</span><br><span class="line">    id int primary key,</span><br><span class="line">    name varchar(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create table customer(   &#x2F;&#x2F;用户表，用户名依赖于用户id</span><br><span class="line">    id int primary key,</span><br><span class="line">    name varchar(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>第三范式(3NF):必须满足第二范式，除开主键列其他列之间不能有传递关系<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table myorder2(    </span><br><span class="line">    order_id int primary key,</span><br><span class="line">    product_id int,</span><br><span class="line">    customer_id int，</span><br><span class="line">	customer_phone varchar(20)</span><br><span class="line">);</span><br><span class="line">向订单表插入顾客手机号(customer_phone),可以发现customer_phone和order_id主键有关系，但是customer_phone还依赖于customer_id（除主键外的其他键）。  </span><br><span class="line">这就不满足第三范式了，应该将顾客的手机放入用户表中才满足第三范式。</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>

<h3 id="以下查询练习题目需新建一个名为”school”的数据库："><a href="#以下查询练习题目需新建一个名为”school”的数据库：" class="headerlink" title="以下查询练习题目需新建一个名为”school”的数据库："></a>以下查询练习题目需新建一个名为”school”的数据库：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">创建几个表：</span><br><span class="line"></span><br><span class="line">学生表（Student）：学号、姓名、性别、出生年月日、班级</span><br><span class="line">课程表（course）：课程号、课程名称、教师编号</span><br><span class="line">成绩表（score）　：学号、课程号、成绩</span><br><span class="line">教师表（teacher）：教师编号、教师性别、教师性别、出生年月日、职称、所在部门</span><br><span class="line"></span><br><span class="line">创建学生表:</span><br><span class="line">create table student(        </span><br><span class="line">    sno varchar(20) primary key,</span><br><span class="line">    sname varchar(20) not null,</span><br><span class="line">    ssex varchar(10) not null,</span><br><span class="line">    sbirthday datetime,</span><br><span class="line">    class varchar(20)</span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line">创建老师表:</span><br><span class="line">create table teacher(</span><br><span class="line">    tno varchar(20) primary key,</span><br><span class="line">    tname varchar(20) not null,</span><br><span class="line">    tsex varchar(10) not null,</span><br><span class="line">    tbirthday datetime,</span><br><span class="line">    prof varchar(20) not null,</span><br><span class="line">    depart varchar(20) not null</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">创建课程表:</span><br><span class="line">create table course(</span><br><span class="line">    cno varchar(20) primary key,</span><br><span class="line">    cname varchar(20) not null,</span><br><span class="line">    tcno varchar(20) not null,</span><br><span class="line">    foreign key(tcno) references teacher(tno) </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">创建成绩表:</span><br><span class="line">create table score(</span><br><span class="line">    ssno varchar(20) not null,</span><br><span class="line">    ccno varchar(20) not null,</span><br><span class="line">    degree decimal,</span><br><span class="line">    foreign key(ssno) references student(sno),</span><br><span class="line">    foreign key(ccno) references course(cno),</span><br><span class="line">    primary key(ssno,ccno) </span><br><span class="line"> );</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用insert插入数据后：</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from student;</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br><span class="line">| sno | sname     | ssex | sbirthday           | class |</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br><span class="line">| 101 | 曾华      | 男   | 1977-09-01 00:00:00 | 95033 |</span><br><span class="line">| 102 | 匡明      | 男   | 1975-02-12 00:00:00 | 95031 |</span><br><span class="line">| 103 | 王丽      | 女   | 1976-01-23 00:00:00 | 95033 |</span><br><span class="line">| 104 | 李军      | 男   | 1976-02-20 00:00:00 | 95033 |</span><br><span class="line">| 105 | 王芳      | 女   | 1975-02-10 00:00:00 | 95031 |</span><br><span class="line">| 106 | 陆君      | 男   | 1974-06-03 00:00:00 | 95031 |</span><br><span class="line">| 107 | 王尼玛    | 男   | 1974-06-03 00:00:00 | 95033 |</span><br><span class="line">| 108 | 张全蛋    | 男   | 1974-03-13 00:00:00 | 95031 |</span><br><span class="line">| 109 | 赵铁柱    | 男   | 1974-06-03 00:00:00 | 95031 |</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from teacher;</span><br><span class="line">+-----+--------+------+---------------------+-----------+-----------------+</span><br><span class="line">| tno | tname  | tsex | tbirthday           | prof      | depart          |</span><br><span class="line">+-----+--------+------+---------------------+-----------+-----------------+</span><br><span class="line">| 804 | 李诚   | 男   | 1958-12-02 00:00:00 | 副教授    | 计算机系        |</span><br><span class="line">| 825 | 王萍   | 女   | 1972-05-05 00:00:00 | 助教      | 计算机系        |</span><br><span class="line">| 831 | 刘冰   | 女   | 1977-08-14 00:00:00 | 助教      | 电子工程系      |</span><br><span class="line">| 856 | 张旭   | 男   | 1969-03-12 00:00:00 | 讲师      | 电子工程系      |</span><br><span class="line">+-----+--------+------+---------------------+-----------+-----------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from course;</span><br><span class="line">+-------+-----------------+------+</span><br><span class="line">| cno   | cname           | tcno |</span><br><span class="line">+-------+-----------------+------+</span><br><span class="line">| 3-105 | 计算机导论      | 825  |</span><br><span class="line">| 3-245 | 操作系统        | 804  |</span><br><span class="line">| 6-166 | 数字电路        | 856  |</span><br><span class="line">| 9-888 | 高等数学        | 831  |</span><br><span class="line">+-------+-----------------+------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from score;</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| ssno | ccno  | degree |</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| 101  | 3-105 |     66 |</span><br><span class="line">| 102  | 3-105 |     59 |</span><br><span class="line">| 103  | 3-105 |     92 |</span><br><span class="line">| 103  | 3-245 |     86 |</span><br><span class="line">| 103  | 6-166 |     85 |</span><br><span class="line">| 104  | 3-105 |     66 |</span><br><span class="line">| 105  | 3-105 |     88 |</span><br><span class="line">| 105  | 3-245 |     75 |</span><br><span class="line">| 105  | 6-166 |     79 |</span><br><span class="line">| 109  | 3-105 |     76 |</span><br><span class="line">| 109  | 3-245 |     68 |</span><br><span class="line">| 109  | 6-166 |     81 |</span><br><span class="line">+------+-------+--------+</span><br></pre></td></tr></table></figure>

<ol>
<li>查询不重复内容：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select distinct ssno from score;</span><br><span class="line">+------+</span><br><span class="line">| ssno |</span><br><span class="line">+------+</span><br><span class="line">| 101  |</span><br><span class="line">| 102  |</span><br><span class="line">| 103  |</span><br><span class="line">| 104  |</span><br><span class="line">| 105  |</span><br><span class="line">| 109  |</span><br><span class="line">+------+</span><br></pre></td></tr></table></figure></li>
<li>查询区间：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from score where degree between 60 and 80;</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| ssno | ccno  | degree |</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| 101  | 3-105 |     66 |</span><br><span class="line">| 104  | 3-105 |     66 |</span><br><span class="line">| 105  | 3-245 |     75 |</span><br><span class="line">| 105  | 6-166 |     79 |</span><br><span class="line">| 109  | 3-105 |     76 |</span><br><span class="line">| 109  | 3-245 |     68 |</span><br><span class="line">+------+-------+--------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from score where degree &gt; 60 and degree &lt; 80;</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| ssno | ccno  | degree |</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| 101  | 3-105 |     66 |</span><br><span class="line">| 104  | 3-105 |     66 |</span><br><span class="line">| 105  | 3-245 |     75 |</span><br><span class="line">| 105  | 6-166 |     79 |</span><br><span class="line">| 109  | 3-105 |     76 |</span><br><span class="line">| 109  | 3-245 |     68 |</span><br><span class="line">+------+-------+--------+</span><br></pre></td></tr></table></figure></li>
<li>查询score表分数为85、86或88的记录：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from score where degree in(85,86,88);</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| ssno | ccno  | degree |</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| 103  | 3-245 |     86 |</span><br><span class="line">| 103  | 6-166 |     85 |</span><br><span class="line">| 105  | 3-105 |     88 |</span><br><span class="line">+------+-------+--------+</span><br></pre></td></tr></table></figure></li>
<li>查询class为‘95031’，ssex为‘女’的记录<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from student where class&#x3D;&#39;95031&#39; or ssex&#x3D;&#39;女&#39;;</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br><span class="line">| sno | sname     | ssex | sbirthday           | class |</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br><span class="line">| 102 | 匡明      | 男   | 1975-02-12 00:00:00 | 95031 |</span><br><span class="line">| 103 | 王丽      | 女   | 1976-01-23 00:00:00 | 95033 |</span><br><span class="line">| 105 | 王芳      | 女   | 1975-02-10 00:00:00 | 95031 |</span><br><span class="line">| 106 | 陆君      | 男   | 1974-06-03 00:00:00 | 95031 |</span><br><span class="line">| 108 | 张全蛋    | 男   | 1974-03-13 00:00:00 | 95031 |</span><br><span class="line">| 109 | 赵铁柱    | 男   | 1974-06-03 00:00:00 | 95031 |</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br></pre></td></tr></table></figure></li>
<li>以class降序查询student表的所有记录<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from student order by class desc;&#x2F;&#x2F;降序</span><br><span class="line">select * from student order by class asc;&#x2F;&#x2F;升序</span><br><span class="line">select * from student order by class;&#x2F;&#x2F;默认升序</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from student order by class;</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br><span class="line">| sno | sname     | ssex | sbirthday           | class |</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br><span class="line">| 102 | 匡明      | 男   | 1975-02-12 00:00:00 | 95031 |</span><br><span class="line">| 105 | 王芳      | 女   | 1975-02-10 00:00:00 | 95031 |</span><br><span class="line">| 106 | 陆君      | 男   | 1974-06-03 00:00:00 | 95031 |</span><br><span class="line">| 108 | 张全蛋    | 男   | 1974-03-13 00:00:00 | 95031 |</span><br><span class="line">| 109 | 赵铁柱    | 男   | 1974-06-03 00:00:00 | 95031 |</span><br><span class="line">| 101 | 曾华      | 男   | 1977-09-01 00:00:00 | 95033 |</span><br><span class="line">| 103 | 王丽      | 女   | 1976-01-23 00:00:00 | 95033 |</span><br><span class="line">| 104 | 李军      | 男   | 1976-02-20 00:00:00 | 95033 |</span><br><span class="line">| 107 | 王尼玛    | 男   | 1974-06-03 00:00:00 | 95033 |</span><br><span class="line">+-----+-----------+------+---------------------+-------+</span><br></pre></td></tr></table></figure></li>
<li>以ccno升序，degree降序查询<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from score order by ccno asc,degree desc;</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| ssno | ccno  | degree |</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| 103  | 3-105 |     92 |</span><br><span class="line">| 105  | 3-105 |     88 |</span><br><span class="line">| 109  | 3-105 |     76 |</span><br><span class="line">| 101  | 3-105 |     66 |</span><br><span class="line">| 104  | 3-105 |     66 |</span><br><span class="line">| 102  | 3-105 |     59 |</span><br><span class="line">| 103  | 3-245 |     86 |</span><br><span class="line">| 105  | 3-245 |     75 |</span><br><span class="line">| 109  | 3-245 |     68 |</span><br><span class="line">| 103  | 6-166 |     85 |</span><br><span class="line">| 109  | 6-166 |     81 |</span><br><span class="line">| 105  | 6-166 |     79 |</span><br><span class="line">+------+-------+--------+</span><br></pre></td></tr></table></figure></li>
<li>统计‘95031’班级的人数<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select count(*) from student where class&#x3D;&#39;95031&#39;;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|        5 |</span><br><span class="line">+----------+</span><br></pre></td></tr></table></figure></li>
<li>查询score表中最高分数的学生号和课程号<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select ssno,ccno from score where degree&#x3D;(select max(degree) from score);</span><br><span class="line">select ssno,ccno from score order by degree desc limit 0,1;&#x2F;&#x2F;缺点是多个同样大的不确定</span><br><span class="line">&#x2F;&#x2F;limit 第一个数字表示从多少开始，第二个数表示查多少个；先降序排列</span><br></pre></td></tr></table></figure></li>
<li>查找课程ccno=‘3-105’对应的平均成绩<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select avg(degree) from score where ccno&#x3D;&#39;3-105&#39;;</span><br></pre></td></tr></table></figure></li>
<li>查找每门课程对应的平均成绩<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select avg(degree) from score group by ccno;</span><br><span class="line">+-------------+</span><br><span class="line">| avg(degree) |</span><br><span class="line">+-------------+</span><br><span class="line">|     74.5000 |</span><br><span class="line">|     76.3333 |</span><br><span class="line">|     81.6667 |</span><br><span class="line">+-------------+</span><br></pre></td></tr></table></figure></li>
<li>查找score 表中至少有2名学生选修的并以3开头的课程号<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">not like 模糊查询取反</span><br><span class="line">mysql&gt; select ccno from score group by ccno</span><br><span class="line">    -&gt; having count(ccno)&gt;&#x3D;2 and ccno like &#39;3%&#39;;</span><br><span class="line">+-------+</span><br><span class="line">| ccno  |</span><br><span class="line">+-------+</span><br><span class="line">| 3-105 |</span><br><span class="line">| 3-245 |</span><br><span class="line">+-------+</span><br></pre></td></tr></table></figure></li>
<li>查找score 表中至少有2名学生选修的并以3开头的课程平均成绩<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select ccno,avg(degree) from score group by ccno</span><br><span class="line">    -&gt; having count(ccno)&gt;&#x3D;2 and ccno like &#39;3%&#39;;</span><br><span class="line">+-------+-------------+</span><br><span class="line">| ccno  | avg(degree) |</span><br><span class="line">+-------+-------------+</span><br><span class="line">| 3-105 |     74.5000 |</span><br><span class="line">| 3-245 |     76.3333 |</span><br><span class="line">+-------+-------------+</span><br></pre></td></tr></table></figure></li>
<li>查询所有同学的sname、cno和degree列<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select sname,ccno,degree from student,score</span><br><span class="line">	where student.sno&#x3D;score.ssno;</span><br></pre></td></tr></table></figure></li>
<li>查询所有学生的sname，cname，degree列<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select sname,cname,degree from student,course,score</span><br><span class="line">	where student.sno&#x3D;score.ssno </span><br><span class="line">		and score.ccno&#x3D;course.cno;</span><br></pre></td></tr></table></figure></li>
<li>查询‘95031’班学生每门课的平均成绩<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select ccno,avg(degree) from score</span><br><span class="line">    -&gt; where ssno in(select sno from student</span><br><span class="line">    -&gt; where class&#x3D;&#39;95031&#39;) group by ccno;</span><br><span class="line">+-------+-------------+</span><br><span class="line">| ccno  | avg(degree) |</span><br><span class="line">+-------+-------------+</span><br><span class="line">| 3-105 |     74.3333 |</span><br><span class="line">| 3-245 |     71.5000 |</span><br><span class="line">| 6-166 |     80.0000 |</span><br><span class="line">+-------+-------------+</span><br></pre></td></tr></table></figure></li>
<li>查询和学号为108,101的同学同年出生的所有学生的sno,sname和sbirthday列<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select sno,sname,sbirthday from student</span><br><span class="line">    -&gt; where year(sbirthday)</span><br><span class="line">    -&gt; in (select year(sbirthday) from student</span><br><span class="line">    -&gt; where sno in (108,101));</span><br><span class="line">+-----+-----------+---------------------+</span><br><span class="line">| sno | sname     | sbirthday           |</span><br><span class="line">+-----+-----------+---------------------+</span><br><span class="line">| 101 | 曾华      | 1977-09-01 00:00:00 |</span><br><span class="line">| 106 | 陆君      | 1974-06-03 00:00:00 |</span><br><span class="line">| 107 | 王尼玛    | 1974-06-03 00:00:00 |</span><br><span class="line">| 108 | 张全蛋    | 1974-03-13 00:00:00 |</span><br><span class="line">| 109 | 赵铁柱    | 1974-06-03 00:00:00 |</span><br><span class="line">+-----+-----------+---------------------+</span><br></pre></td></tr></table></figure></li>
<li>查询‘张旭’教师任课的学生成绩<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from score</span><br><span class="line">	where ccno &#x3D;(select cno from course</span><br><span class="line">		where tcno&#x3D;(select tno from teacher</span><br><span class="line">			where tname&#x3D;&#39;张旭&#39;));</span><br></pre></td></tr></table></figure></li>
<li>查询选修某课程的同学人数大于5人的教师的信息<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from teacher</span><br><span class="line">	where tno&#x3D;(select tcno from course </span><br><span class="line">		where cno &#x3D;(select ccno from score</span><br><span class="line">			group by ccno having count(*)&gt;5));</span><br></pre></td></tr></table></figure></li>
<li>查询‘计算机系’和‘电子工程系’不同职称的教师的信息<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--union 求并集</span><br><span class="line">select * from teacher</span><br><span class="line">where depart&#x3D;&#39;计算机系&#39;</span><br><span class="line">	and prof not in(select prof from teacher</span><br><span class="line">		where depart&#x3D;&#39;电子工程系&#39;)</span><br><span class="line">union</span><br><span class="line">select * from teacher</span><br><span class="line">	where depart&#x3D;&#39;电子工程系&#39;</span><br><span class="line">		and prof not in(select prof from teacher</span><br><span class="line">			where depart&#x3D;&#39;计算机系&#39;);</span><br></pre></td></tr></table></figure></li>
<li>查找选修编号为“3-105”课程且成绩至少高于选修编号为“3-245”的同学信息再按desc排序<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">至少（any 大于等于其中一个）</span><br><span class="line">mysql&gt; select * from score</span><br><span class="line">    -&gt; where ccno&#x3D;&#39;3-105&#39;</span><br><span class="line">    -&gt; and degree &gt; any(select degree from score</span><br><span class="line">    -&gt; where ccno&#x3D;&#39;3-245&#39;) order by degree desc;</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| ssno | ccno  | degree |</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| 103  | 3-105 |     92 |</span><br><span class="line">| 105  | 3-105 |     88 |</span><br><span class="line">| 109  | 3-105 |     76 |</span><br><span class="line">+------+-------+--------+</span><br><span class="line"></span><br><span class="line">all 大于任何一个</span><br></pre></td></tr></table></figure></li>
<li>查询成绩比该课程平均成绩低的同学的信息<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--复制表数据做数据查询，可以看成对两个等于score表的a、b进行操作</span><br><span class="line">mysql&gt; select * from score a</span><br><span class="line">    -&gt; where degree &lt; (select avg(degree) from score b</span><br><span class="line">    -&gt; where a.ccno&#x3D;b.ccno);</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| ssno | ccno  | degree |</span><br><span class="line">+------+-------+--------+</span><br><span class="line">| 101  | 3-105 |     66 |</span><br><span class="line">| 102  | 3-105 |     59 |</span><br><span class="line">| 104  | 3-105 |     66 |</span><br><span class="line">| 105  | 3-245 |     75 |</span><br><span class="line">| 105  | 6-166 |     79 |</span><br><span class="line">| 109  | 3-245 |     68 |</span><br><span class="line">| 109  | 6-166 |     81 |</span><br><span class="line">+------+-------+--------+</span><br></pre></td></tr></table></figure></li>
<li>查询student表中每个学生的姓名年龄<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--year函数，now函数</span><br><span class="line">select sname,year(now())-year(sbirthday)</span><br><span class="line">	as &#39;age&#39; from student;</span><br><span class="line"></span><br><span class="line">mysql&gt; select year(now());</span><br><span class="line">+-------------+</span><br><span class="line">| year(now()) |</span><br><span class="line">+-------------+</span><br><span class="line">|        2020 |</span><br><span class="line">+-------------+</span><br></pre></td></tr></table></figure></li>
<li>查询student表中最大值和最小值的sbirthday日期值<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select max(sbirthday) as &#39;最大日期&#39;,min(sbirthday)</span><br><span class="line">    -&gt; as &#39;最小日期&#39; from student;</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| 最大日期            | 最小日期            |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| 1977-09-01 00:00:00 | 1974-03-13 00:00:00 |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">as:给列改名</span><br></pre></td></tr></table></figure></li>
<li>查询班号和年龄从小到大的顺序查询student表中的全部内容<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from student order by class desc,sbirthday;</span><br></pre></td></tr></table></figure></li>
<li>查询最高分同学的信息<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from score where degree&#x3D;(select max(degree) from score);</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>好啦！到这里练习终于结束了。</p>
<hr>

<h3 id="SQL的四种连接查询-表在school数据库中"><a href="#SQL的四种连接查询-表在school数据库中" class="headerlink" title="SQL的四种连接查询(表在school数据库中)"></a>SQL的四种连接查询(表在school数据库中)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--先建两个表</span><br><span class="line">create table person(</span><br><span class="line">	id int,</span><br><span class="line">	name varchar(20),</span><br><span class="line">	cardID int</span><br><span class="line">);</span><br><span class="line">+------+--------+--------+</span><br><span class="line">| id   | name   | cardID |</span><br><span class="line">+------+--------+--------+</span><br><span class="line">|    1 | 张三   |      1 |</span><br><span class="line">|    2 | 李四   |      3 |</span><br><span class="line">|    3 | 王五   |      6 |</span><br><span class="line">+------+--------+--------+</span><br><span class="line"></span><br><span class="line">create table card(</span><br><span class="line">	id int,</span><br><span class="line">	name varchar(20)</span><br><span class="line">);</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 饭卡      |</span><br><span class="line">|    2 | 建行卡    |</span><br><span class="line">|    3 | 农行卡    |</span><br><span class="line">|    4 | 工商卡    |</span><br><span class="line">|    5 | 邮政卡    |</span><br><span class="line">+------+-----------+</span><br><span class="line"></span><br><span class="line">--未创建外键</span><br></pre></td></tr></table></figure>
<ol>
<li><p>inner join查询（内连接）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from person inner join card on person.cardID&#x3D;card.id;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;inner可以去掉</span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">| id   | name   | cardID | id   | name      |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">|    1 | 张三   |      1 |    1 | 饭卡      |</span><br><span class="line">|    2 | 李四   |      3 |    3 | 农行卡    |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line"></span><br><span class="line">--内联查询，其实就是两张表的数据通过某个字段相对查询出记录数据</span><br></pre></td></tr></table></figure>
</li>
<li><p>left join（左外连接）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from person left join card on person.cardID&#x3D;card.id;</span><br><span class="line"></span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">| id   | name   | cardID | id   | name      |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">|    1 | 张三   |      1 |    1 | 饭卡      |</span><br><span class="line">|    2 | 李四   |      3 |    3 | 农行卡    |</span><br><span class="line">|    3 | 王五   |      6 | NULL | NULL      |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line"></span><br><span class="line">--左外连接会把表中所有数据取出来，如果有相等就显示出来</span><br><span class="line">--没有，就会补 NULL</span><br></pre></td></tr></table></figure></li>
<li><p>right join（右外连接）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from person right join card on person.cardID&#x3D;card.id;</span><br><span class="line"></span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">| id   | name   | cardID | id   | name      |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">|    1 | 张三   |      1 |    1 | 饭卡      |</span><br><span class="line">|    2 | 李四   |      3 |    3 | 农行卡    |</span><br><span class="line">| NULL | NULL   |   NULL |    2 | 建行卡    |</span><br><span class="line">| NULL | NULL   |   NULL |    4 | 工商卡    |</span><br><span class="line">| NULL | NULL   |   NULL |    5 | 邮政卡    |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br></pre></td></tr></table></figure></li>
<li><p>full jion(全外连接)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--mysql 不支持 full join</span><br><span class="line"></span><br><span class="line">以下连接得到全连接</span><br><span class="line">select * from person left join card on person.cardID&#x3D;card.id</span><br><span class="line">union</span><br><span class="line">select * from person right join card on person.cardID&#x3D;card.id;</span><br><span class="line"></span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">| id   | name   | cardID | id   | name      |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br><span class="line">|    1 | 张三   |      1 |    1 | 饭卡      |</span><br><span class="line">|    2 | 李四   |      3 |    3 | 农行卡    |</span><br><span class="line">|    3 | 王五   |      6 | NULL | NULL      |</span><br><span class="line">| NULL | NULL   |   NULL |    2 | 建行卡    |</span><br><span class="line">| NULL | NULL   |   NULL |    4 | 工商卡    |</span><br><span class="line">| NULL | NULL   |   NULL |    5 | 邮政卡    |</span><br><span class="line">+------+--------+--------+------+-----------+</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis_SQL执行流程分析（源码）</title>
    <url>/2020/04/28/Mybatis_SQL%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>最近在学习mybatis框架，想要了解一下该框架究竟是如何执行sql的，可能是第一次看源码的缘故，一开始晕头转向的，不过在网上找到了一篇不错的博客，讲的很仔细：<a href="https://www.cnblogs.com/dongying/p/4142476.html" target="_blank" rel="noopener">深入浅出Mybatis系列（十）—SQL执行流程分析（源码篇）</a>. </p>
<a id="more"></a>
<p>###1.SqlSessionFactory 与 SqlSession.<br>通过前面的章节对于mybatis 的介绍及使用，大家都能体会到SqlSession的重要性了吧， 没错，从表面上来看，咱们都是通过SqlSession去执行sql语句（注意：是从表面看，实际的待会儿就会讲）。那么咱们就先看看是怎么获取SqlSession的吧： </p>
<p> <img src="/images/Mybatis_SQL01.png" alt="avatar"></p>
<p>(1)首先，SqlSessionFactoryBuilder去读取mybatis的配置文件，然后build一个DefaultSqlSessionFactory。源码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">   * 一系列的构造方法最终都会调用本方法（配置文件为Reader时会调用本方法，还有一个InputStream方法与此对应）</span><br><span class="line">   * @param reader</span><br><span class="line">   * @param environment</span><br><span class="line">   * @param properties</span><br><span class="line">   * @return</span><br><span class="line">   *&#x2F;</span><br><span class="line">  public SqlSessionFactory build(Reader reader, String environment, Properties properties) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      &#x2F;&#x2F;通过XMLConfigBuilder解析配置文件，解析的配置相关信息都会封装为一个Configuration对象</span><br><span class="line">      XMLConfigBuilder parser &#x3D; new XMLConfigBuilder(reader, environment, properties);</span><br><span class="line">      &#x2F;&#x2F;这儿创建DefaultSessionFactory对象</span><br><span class="line">      return build(parser.parse());</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">      throw ExceptionFactory.wrapException(&quot;Error building SqlSession.&quot;, e);</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">      ErrorContext.instance().reset();</span><br><span class="line">      try &#123;</span><br><span class="line">        reader.close();</span><br><span class="line">      &#125; catch (IOException e) &#123;</span><br><span class="line">        &#x2F;&#x2F; Intentionally ignore. Prefer previous error.</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public SqlSessionFactory build(Configuration config) &#123;</span><br><span class="line">    return new DefaultSqlSessionFactory(config);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>mybatis框架</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>sql</tag>
      </tags>
  </entry>
</search>
